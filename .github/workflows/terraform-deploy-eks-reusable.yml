name: 'Terraform Deploy EKS Reusable'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  pull-requests: write # This is required to add comments to Pull Requests

on:
  workflow_call:
    secrets:
      AWS_ACCOUNT:
        required: true
      AWS_IAM_ROLE:
        required: true
      WORKLOADS_PAT:
        required: true
    inputs:
      aws-region:
        required: true
        type: string
      s3-bucket:
        required: true
        type: string
      team:
        required: true
        type: string
      environment:
        required: true
        type: string
      deployment-id:
        required: true
        type: string
      load-test-file:
        required: true
        type: string
      sample-app:
        required: true
        type: string
      workloads-ref:
        required: false
        type: string
        default: "main"

concurrency:
  group: "${{ inputs.team }}-${{ inputs.environment }}-${{ inputs.deployment-id }}"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    outputs:
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Terraform Init
      id: init
      uses: ./.github/actions/terraform-init
      with:
        AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
        AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
        deploy: true
        aws-region: ${{ inputs.aws-region }}
        s3-bucket: ${{ inputs.s3-bucket }}
        team: ${{ inputs.team }}
        environment: ${{ inputs.environment }}
        deployment-id: ${{ inputs.deployment-id }}
        terraform-wrapper: true
    - name: Terraform Plan
      id: plan
      uses: ./.github/actions/terraform-plan
      with:
        AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
        AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
        WORKLOADS_PAT: ${{ secrets.WORKLOADS_PAT }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        deploy: true
        aws-region: ${{ inputs.aws-region }}
        team: ${{ inputs.team }}
        environment: ${{ inputs.environment }}
        deployment-id: ${{ steps.init.outputs.cluster-id }}
        cluster-var-file: ${{ steps.init.outputs.cluster-var-file }}
        init-outcome: ${{ steps.init.outputs.outcome }}
        workloads-ref: ${{ inputs.workloads-ref }}
  terraform-eks-deploy:
    needs: [terraform-plan]
    name: 'Terraform EKS Deploy'
    if: (github.ref_name == 'main' && needs.terraform-plan.outputs.exitcode == 2) ||
          (inputs.deployment-id == github.head_ref && needs.terraform-plan.outputs.exitcode == 2)
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: https://game-2048-${{ steps.cluster_info.outputs.name }}.micbegin.people.aws.dev/
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Terraform Init
      id: init
      uses: ./.github/actions/terraform-init
      with:
        AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
        AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
        deploy: true
        aws-region: ${{ inputs.aws-region }}
        s3-bucket: ${{ inputs.s3-bucket }}
        team: ${{ inputs.team }}
        environment: ${{ inputs.environment }}
        deployment-id: ${{ inputs.deployment-id }}
        terraform-wrapper: false
    - name: Retrieve Terraform Plan from Cache
      uses: actions/cache@v3
      with:
        path: tfplan
        key: tfplan-${{ inputs.environment }}-${{ github.run_id }}-${{ github.run_attempt }}
    - name: Terraform Apply
      run: terraform apply tfplan
    - name: Writing kubeconfig for eks cluster
      run: $(terraform output -raw configure_kubectl)
    - name: Run local k6 test
      uses: grafana/k6-action@v0.2.0
      with:
        filename: ./tests/${{ inputs.load-test-file }}
    - name: Get Cluster Info
      id: cluster_info
      run: |
        CLUSTER_NAME=$(terraform output -raw cluster_name)
        echo "name=${CLUSTER_NAME}"  >> $GITHUB_OUTPUT
